// 1) Algo . Замена значения одной переменной на значение другой , через третью переменную.

let a = 2;
let b = 5;
let temp = a;
a = b;
b = temp;

// 2) Algo . Замена значения одной переменной на значение другой , через две переменных.

let a = 2;
let b = 5;
let temp1 = b;
let temp2 = a;
a = temp1;
b = temp2;

// Operating with arrays from LearnJs

// 1) Скопирован ли массив?
// Что выведет следующий код?

let fruits = ["Яблоки", "Груша", "Апельсин"];

// добавляем новое значение в "копию"
let shoppingCart = fruits;
shoppingCart.push("Банан");

// что в fruits?
alert( fruits.length ); // 4 (fruits = ["Яблоки", "Груша", "Апельсин", "Банан"])

// 2) Операции с массивами

//  Давайте произведём 5 операций с массивом.

// 1: Создайте массив styles с элементами «Джаз» и «Блюз».
// 2: Добавьте «Рок-н-ролл» в конец.
// 3: Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен работать для массивов с любой длиной.
// 4: Удалите первый элемент массива и покажите его.
// 5: Вставьте «Рэп» и «Регги» в начало массива.
// Массив по ходу выполнения операций:

let styles = ["Джаз","Блюз"];
styles.push("Рок-н-ролл");
styles[Math.floor((styles.length) - 1 / 2)];
alert(styles.shift());
styles.unshift("Рэп", "Регги");

// 3) Вызов в контексте массива

// Каков результат? Почему?

let arr = ["a", "b"];

arr.push(function() {
  alert( this );
})

arr[2](); // ?

// Вызов arr[2]() синтаксически – старый добрый obj[method](), в роли obj – arr, а в роли method – 2.

// Итак, у нас есть вызов функции arr[2] как метода объекта. Соответственно, он получает в качестве this объект arr и выводит массив:

let arr = ["a", "b"];

arr.push(function() {
  alert( this );
})

arr[2](); // "a","b",function
// У массива в итоге 3 элемента: сначала их было 2, плюс функция.

// 4) Сумма введённых чисел

// Напишите функцию sumInput(), которая:

// Просит пользователя ввести значения, используя prompt и сохраняет их в массив.
// Заканчивает запрашивать значения, когда пользователь введёт не числовое значение, пустую строку или нажмёт «Отмена».
// Подсчитывает и возвращает сумму элементов массива.
// P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».

function sumInput() {
    
}
